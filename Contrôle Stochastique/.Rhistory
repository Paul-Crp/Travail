V[, 1] <- (0:M) # Récompense terminale
V[1, 1] <- -5   # De même
for (n in 1:N) {
for (k in 1:(M + 1)) {
if (k <= 2^(N - n + 1) + 1) {
tmp <- NULL
tmp <- rec + V[, n] %*% Q[k, , ]
v <- max(tmp)
f <- which.max(tmp)
V[k, n + 1] <- v
maximiseur [k, n] <- f - 1
}
}
}
View(V)
View(maximiseur)
nb_annees <- 20
proba_d <- 0.35
proba_b <- 0.45
nb_boucles <- 1000000
p <- matrix(nrow = 1, ncol = nb_boucles)
a <- 0
r <- c()
M <- 0
for (ii in 1:nb_boucles) {
nb_oiseaux <- 2
for (i in 2:(nb_annees + 1)) {
if (nb_oiseaux != 0) {
for (x in 1:nb_oiseaux) {
d <- runif(1, min = 0, max = 1)
b <- runif(1, min = 0, max = 1)
if (d < proba_d) {
nb_oiseaux <- nb_oiseaux - 1
}
if (b < proba_b) {
nb_oiseaux <- nb_oiseaux + 1
}
}
}
}
p[1, ii] <- nb_oiseaux
}
max(p)
for (i in 1:nb_boucles) {
if (p[i] > 100) {
a <- a + 1
r <- c(r, p[i])
}
}
max <- max(p)
b <- a
while (b / a > 0.0001) {
b <- a
for (i in 1:a) {
if (r[i] < M) {
b <- b - 1
}
}
M <- M + 1
}
for (i in 1:nb_boucles) {
if (p[i] > 0) {
a <- a + 1
r <- c(r, p[i])
}
}
print(rowMeans(p) + 1.96 * sqrt(v))
max <- max(p)
b <- a
while (b / a > 0.0001) {
b <- a
for (i in 1:a) {
if (r[i] < M) {
b <- b - 1
}
}
M <- M + 1
}
# Variables de bases, inutile de calculer les coûts.
nb_annees <- 20
proba_d <- 0.35
proba_b <- 0.45
nb_boucles <- 1000
p <- matrix(nrow = 1, ncol = nb_boucles)
a <- 0
r <- c()
M <- 0
for (ii in 1:nb_boucles) {
nb_oiseaux <- 2
for (i in 2:(nb_annees + 1)) {
if (nb_oiseaux != 0) {
for (x in 1:nb_oiseaux) {
d <- runif(1, min = 0, max = 1)
b <- runif(1, min = 0, max = 1)
if (d < proba_d) {
nb_oiseaux <- nb_oiseaux - 1
}
if (b < proba_b) {
nb_oiseaux <- nb_oiseaux + 1
}
}
}
}
p[1, ii] <- nb_oiseaux
}
for (i in 1:nb_boucles) {
if (p[i] > 0) {
a <- a + 1
r <- c(r, p[i])
}
}
max <- max(p)
b <- a
while (b / a > 0.0001) {
b <- a
for (i in 1:a) {
if (r[i] < M) {
b <- b - 1
}
}
M <- M + 1
}
p[168]
# Variables de bases, inutile de calculer les coûts.
nb_annees <- 20
proba_d <- 0.35
proba_b <- 0.45
nb_boucles <- 10000
p <- matrix(nrow = 1, ncol = nb_boucles)
a <- 0
r <- c()
M <- 0
for (ii in 1:nb_boucles) {
nb_oiseaux <- 2
for (i in 2:(nb_annees + 1)) {
if (nb_oiseaux != 0) {
for (x in 1:nb_oiseaux) {
d <- runif(1, min = 0, max = 1)
b <- runif(1, min = 0, max = 1)
if (d < proba_d) {
nb_oiseaux <- nb_oiseaux - 1
}
if (b < proba_b) {
nb_oiseaux <- nb_oiseaux + 1
}
}
}
}
p[1, ii] <- nb_oiseaux
}
for (i in 1:nb_boucles) {
if (p[i] > 0) {
a <- a + 1
r <- c(r, p[i])
}
}
max <- max(p)
b <- a
while (b / a > 0.0001) {
b <- a
for (i in 1:a) {
if (r[i] < M) {
b <- b - 1
}
}
M <- M + 1
}
# Variables de bases, inutile de calculer les coûts.
nb_annees <- 20
proba_d <- 0.35
proba_b <- 0.45
nb_boucles <- 10000
p <- matrix(nrow = 1, ncol = nb_boucles)
a <- 0
r <- c()
M <- 0
for (ii in 1:nb_boucles) {
nb_oiseaux <- 2
for (i in 2:(nb_annees + 1)) {
if (nb_oiseaux != 0) {
for (x in 1:nb_oiseaux) {
d <- runif(1, min = 0, max = 1)
b <- runif(1, min = 0, max = 1)
if (d < proba_d) {
nb_oiseaux <- nb_oiseaux - 1
}
if (b < proba_b) {
nb_oiseaux <- nb_oiseaux + 1
}
}
}
}
p[1, ii] <- nb_oiseaux
}
for (i in 1:nb_boucles) {
if (p[i] > 0) {
a <- a + 1
r <- c(r, p[i])
}
}
max <- max(p)
b <- a
while (b / a > 0.0001) {
b <- a
M <- M + 1
for (i in 1:a) {
if (r[i] < M) {
b <- b - 1
}
}
}
# Variables de bases, inutile de calculer les coûts.
nb_annees <- 20
proba_d <- 0.35
proba_b <- 0.45
nb_boucles <- 10000
p <- matrix(nrow = 1, ncol = nb_boucles)
a <- 0
r <- c()
M <- 0
for (ii in 1:nb_boucles) {
nb_oiseaux <- 2
for (i in 2:(nb_annees + 1)) {
if (nb_oiseaux != 0) {
for (x in 1:nb_oiseaux) {
d <- runif(1, min = 0, max = 1)
b <- runif(1, min = 0, max = 1)
if (d < proba_d) {
nb_oiseaux <- nb_oiseaux - 1
}
if (b < proba_b) {
nb_oiseaux <- nb_oiseaux + 1
}
}
}
}
p[1, ii] <- nb_oiseaux
}
for (i in 1:nb_boucles) {
if (p[i] > 0) {
a <- a + 1
r <- c(r, p[i])
}
}
max <- max(p)
b <- a
while (b / a > 0.0001) {
b <- a
M <- M + 1
for (i in 1:a) {
if (r[i] <= M) {
b <- b - 1
}
}
}
# Variables de bases, inutile de calculer les coûts.
nb_annees <- 20
proba_d <- 0.35
proba_b <- 0.45
nb_boucles <- 100000
p <- matrix(nrow = 1, ncol = nb_boucles)
a <- 0
r <- c()
M <- 0
for (ii in 1:nb_boucles) {
nb_oiseaux <- 2
for (i in 2:(nb_annees + 1)) {
if (nb_oiseaux != 0) {
for (x in 1:nb_oiseaux) {
d <- runif(1, min = 0, max = 1)
b <- runif(1, min = 0, max = 1)
if (d < proba_d) {
nb_oiseaux <- nb_oiseaux - 1
}
if (b < proba_b) {
nb_oiseaux <- nb_oiseaux + 1
}
}
}
}
p[1, ii] <- nb_oiseaux
}
for (i in 1:nb_boucles) {
if (p[i] > 0) {
a <- a + 1
r <- c(r, p[i])
}
}
max <- max(p)
b <- a
while (b / a > 0.0001) {
b <- a
M <- M + 1
for (i in 1:a) {
if (r[i] <= M) {
b <- b - 1
}
}
}
# Variables de bases, inutile de calculer les coûts.
nb_annees <- 20
proba_d <- 0.35
proba_b <- 0.45
nb_boucles <- 100000
p <- matrix(nrow = 1, ncol = nb_boucles)
a <- 0
r <- c()
M <- 0
for (ii in 1:nb_boucles) {
nb_oiseaux <- 2
for (i in 2:(nb_annees + 1)) {
if (nb_oiseaux != 0) {
for (x in 1:nb_oiseaux) {
d <- runif(1, min = 0, max = 1)
b <- runif(1, min = 0, max = 1)
if (d < proba_d) {
nb_oiseaux <- nb_oiseaux - 1
}
if (b < proba_b) {
nb_oiseaux <- nb_oiseaux + 1
}
}
}
}
p[1, ii] <- nb_oiseaux
}
for (i in 1:nb_boucles) {
if (p[i] > 0) {
a <- a + 1
r <- c(r, p[i])
}
}
max <- max(p)
b <- a
while (b / a > 0.0001) {
b <- a
M <- M + 1
for (i in 1:a) {
if (r[i] <= M) {
b <- b - 1
}
}
}
knitr::opts_chunk$set(echo = TRUE)
# Variables de bases
nb_annees <- 20
alpha0 <- 5
proba_d <- 0.45
proba_b <- 0.45
nb_boucles <- 1000
p <- matrix(nrow = 2, ncol = nb_boucles)
# On crée une matrice à 2 lignes et autant de colonnes que nécessaire,
# la première pour le coût, la seconde pour le nombre d'oiseaux au bout de 20 ans.
for (ii in 1:nb_boucles) {
nb_oiseaux <- 2
c <- 0
# Ces variables ont besoin d'être remises à 0 à chaque nouvelle boucle
# et on retire les historiques, on ne garde que les valeurs finales.
for (i in 2:(nb_annees + 1)) {
if (nb_oiseaux != 0) {
for (x in 1:nb_oiseaux) {
d <- runif(1, min = 0, max = 1)
b <- runif(1, min = 0, max = 1)
if (d < proba_d) {
nb_oiseaux <- nb_oiseaux - 1
}
if (b < proba_b) {
nb_oiseaux <- nb_oiseaux + 1
}
}
}
}
if (nb_oiseaux == 0) {
c <- c - alpha0
} else {
c <- c + nb_oiseaux
}
p[1, ii] <- c
p[2, ii] <- nb_oiseaux
# On rajoute le ii-ème gain final et nombre d'oiseaux à la ii-ème place de la matrice.
}
print("Estimation du coût et du nombre moyen d'oiseaux:")
rowMeans(p)
v <- c()
v[1] <- (mean((p[1, ])^2) - mean(p[1, ])^2) / (nb_boucles - 1)
v[2] <- (mean((p[2, ])^2) - mean(p[2, ])^2) / (nb_boucles - 1)
# On ne multiplie pas par "nb_boucles"
# car on le divise par cette même quantité dans le calcul de l'IC.
print("IC à 95%")
print(rowMeans(p) - 1.96 * sqrt(v))
print(rowMeans(p) + 1.96 * sqrt(v))
mean(p[2, ])
nb_annees <- 20
alpha0 <- 5
alpha1 <- 0.1
proba_d <- 0.45
proba_b <- 0.5
nb_boucles <- 1000
p <- matrix(nrow = 3, ncol = nb_boucles)
for (ii in 1:nb_boucles) {
nb_oiseaux <- 2
c <- 0
c1 <- 0
for (i in 2:(nb_annees + 1)) {
if (nb_oiseaux != 0) {
for (x in 1:nb_oiseaux) {
d <- runif(1, min = 0, max = 1)
b <- runif(1, min = 0, max = 1)
if (d < proba_d) {
nb_oiseaux <- nb_oiseaux - 1
}
if (b < proba_b) {
nb_oiseaux <- nb_oiseaux + 1
}
}
c1 <- c1 - alpha1
}
c <- c - alpha1
}
if (nb_oiseaux == 0) {
c <- c - alpha0
c1 <- c1 - alpha0
} else {
c <- c + nb_oiseaux
c1 <- c1 + nb_oiseaux
}
p[1, ii] <- c
p[2, ii] <- c1
p[3, ii] <- nb_oiseaux
}
mean((p[1, ])
)
nb_annees <- 20
alpha0 <- 5
alpha1 <- 0.1
proba_d <- 0.45
proba_b <- 0.5
nb_boucles <- 1000
p <- matrix(nrow = 3, ncol = nb_boucles)
for (ii in 1:nb_boucles) {
nb_oiseaux <- 2
c <- 0
c1 <- 0
for (i in 2:(nb_annees + 1)) {
if (nb_oiseaux != 0) {
for (x in 1:nb_oiseaux) {
d <- runif(1, min = 0, max = 1)
b <- runif(1, min = 0, max = 1)
if (d < proba_d) {
nb_oiseaux <- nb_oiseaux - 1
}
if (b < proba_b) {
nb_oiseaux <- nb_oiseaux + 1
}
}
c1 <- c1 - alpha1
}
c <- c - alpha1
}
if (nb_oiseaux == 0) {
c <- c - alpha0
c1 <- c1 - alpha0
} else {
c <- c + nb_oiseaux
c1 <- c1 + nb_oiseaux
}
p[1, ii] <- c
p[2, ii] <- c1
p[3, ii] <- nb_oiseaux
}
mean(p[1, ])
mean(p[3, ])
nb_annees <- 20
alpha0 <- 5
alpha2 <- 0.2
proba_d <- 0.35
proba_b <- 0.45
nb_boucles <- 1000
p <- matrix(nrow = 3, ncol = nb_boucles)
for (ii in 1:nb_boucles) {
nb_oiseaux <- 2
c <- 0
c1 <- 0
for (i in 2:(nb_annees + 1)) {
if (nb_oiseaux != 0) {
for (x in 1:nb_oiseaux) {
d <- runif(1, min = 0, max = 1)
b <- runif(1, min = 0, max = 1)
if (d < proba_d) {
nb_oiseaux <- nb_oiseaux - 1
}
if (b < proba_b) {
nb_oiseaux <- nb_oiseaux + 1
}
}
c1 <- c1 - alpha2
}
c <- c - alpha2
}
if (nb_oiseaux == 0) {
c <- c - alpha0
c1 <- c1 - alpha0
} else {
c <- c + nb_oiseaux
c1 <- c1 + nb_oiseaux
}
p[1, ii] <- c
p[2, ii] <- c1
p[3, ii] <- nb_oiseaux
}
round(mean(p[3, ]))
mean(p[1, ])
